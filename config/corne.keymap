/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y          &kp U  &kp I         &kp O    &kp P     &kp BACKSLASH
&kp TAB     &kp A  &kp S  &kp D     &kp F  &kp G        &kp H          &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N          &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp LEFT_CONTROL
                          &kp LGUI  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            bindings = <
&kp ESCAPE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp NUMBER_4   &kp NUMBER_5     &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8       &kp NUMBER_9     &kp NUMBER_0  &none
&mo 4         &kp PAGE_UP   &none         &kp LA(BACKSPACE)  &kp PAGE_DOWN  &kp LG(SPACE)    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW       &kp RIGHT_ARROW  &none         &none
&kp CAPSLOCK  &none         &none         &none              &none          &kp C_PREV       &kp C_NEXT      &kp C_MUTE      &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_PP      &mo 3
                                          &kp LGUI           &none          &kp SPACE        &kp ENTER       &none           &kp LALT
            >;
        };

        raise_layer {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&kp TAB    &none            &none   &none     &none       &none          &kp MINUS       &kp PLUS       &kp LEFT_BRACKET  &kp RBKT              &none                  &none
&kp LSHFT  &none            &none   &none     &none       &none          &kp UNDERSCORE  &kp EQUAL      &kp LBRC          &kp RBRC              &none                  &kp LEFT_CONTROL
                                    &kp LGUI  &none       &kp SPACE      &kp BACKSPACE   &none          &kp LALT
            >;
        };

        numpad {
            bindings = <
&kp ESCAPE  &kp F1   &kp F2   &kp F3        &kp F4  &kp F5       &none          &none  &kp N7  &kp N8  &kp N9  &none
&kp TAB     &kp F6   &kp F7   &kp F8        &kp F9  &kp F10      &none          &none  &kp N4  &kp N5  &kp N6  &none
&kp LSHIFT  &kp F11  &kp F12  &none         &none   &none        &none          &none  &kp N1  &kp N2  &kp N3  &none
                              &kp LEFT_GUI  &none   &kp SPACE    &kp BACKSPACE  &none  &kp N0
            >;
        };

        controls {
            bindings = <
&bootloader  &none             &kp LA(LG(UP_ARROW))    &kp LA(LC(RIGHT_ARROW))  &kp LA(LC(LG(RIGHT_ARROW)))  &none    &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &none  &bootloader
&none        &kp LG(LA(LEFT))  &kp LA(LG(DOWN_ARROW))  &kp LG(LA(RIGHT))        &kp LG(LA(F))                &none    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &none  &none
&none        &bt BT_CLR        &bt BT_SEL 0            &bt BT_SEL 1             &bt BT_SEL 2                 &none    &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none  &ext_power EP_TOG
                                                       &none                    &none                        &none    &none            &none            &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

// LEDs are per half for split keyboards

&led_strip { chain-length = <27>; };
